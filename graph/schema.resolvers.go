package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"

	"github.com/graphql_example/graph/model"
)

// CreateProduct is the resolver for the CreateProduct field.
func (r *mutationResolver) CreateProduct(ctx context.Context, input model.NewProduct) (*model.Product, error) {
	return r.Service.Storage.Product().CreateProduct(&input)
}

// GetProduct is the resolver for the GetProduct field.
func (r *mutationResolver) GetProduct(ctx context.Context, input model.GetProductByName) (*model.Product, error) {
	return r.Service.Storage.Product().GetProduct(&input)
}

// NewProduct is the resolver for the NewProduct field.
func (r *queryResolver) NewProduct(ctx context.Context) ([]*model.Product, error) {
	panic(fmt.Errorf("not implemented: NewProduct - NewProduct"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
